
class {{type}} {

  final streamy.Root _root;

  static final List<String> KNOWN_METHODS = [
{{#methods}}    r'{{name}}',
{{/methods}}  ];

  static final API_TYPE = r'{{type}}';
  String get apiType => API_TYPE;

  {{type}}(this._root);

{{#methods}}
{{#docs}}  /// {{.}}
{{/docs}}
  req.{{reqType}} {{name}}({{#payload}}obj.{{payloadType}} payload{{/payload}}{{^payload}}{{#pathParameters}}{{argType}} {{varName}}{{^last}}, {{/last}}{{/pathParameters}}{{/payload}}{{#hasQueryParameters}}{{#hasPathParametersOrPayload}},{{/hasPathParametersOrPayload}}
      { {{#queryParameters}}{{argType}} {{varName}}{{^last}}, {{/last}}{{/queryParameters}} } {{/hasQueryParameters}}) {
    var request = new req.{{reqType}}(_root{{#payload}}, payload{{/payload}});
{{#hasQueryParameters}}{{#queryParameters}}
    if ({{varName}} != null) {
      {{^repeated}}request.{{varName}} = {{varName}};{{/repeated}}
      {{#repeated}}request.{{varName}}.addAll({{varName}});{{/repeated}}
    }
{{/queryParameters}}{{/hasQueryParameters}}{{^payload}}{{#pathParameters}}
    if ({{varName}} != null) {
      {{^repeated}}request.{{varName}} = {{varName}};{{/repeated}}
      {{#repeated}}request.{{varName}}.addAll({{varName}});{{/repeated}}
    }
{{/pathParameters}}{{/payload}}
    return request;
  }
{{/methods}}

{{#resources}}
  {{type}} _{{name}};
  {{type}} get {{name}} {
    if (_{{name}} == null) {
      _{{name}} = new {{type}}(_root);
    }
    return _{{name}};
  }
{{/resources}}
}
